//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.239.
//
#pragma warning disable 1591

namespace AdimAdimDavaKaydi.ErrorHandlerSOAPAPI
{
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "ERRORHANDLER_SOAP_API_NENCSoap", Namespace = "http://update.soap.avukatpro.com/")]
    public partial class ERRORHANDLER_SOAP_API_NENC : System.Web.Services.Protocols.SoapHttpClientProtocol
    {
        private System.Threading.SendOrPostCallback ErrorReportOperationCompleted;

        private System.Threading.SendOrPostCallback ErrorReportV2OperationCompleted;

        private bool useDefaultCredentialsSetExplicitly;

        /// <remarks/>
        public ERRORHANDLER_SOAP_API_NENC()
        {
            this.Url = global::AdimAdimDavaKaydi.Properties.Settings.Default.avpng_ErrorHandlerSOAPAPI_ERRORHANDLER_SOAP_API_NENC;
            if ((this.IsLocalFileSystemWebService(this.Url) == true))
            {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else
            {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }

        public new string Url
        {
            get
            {
                return base.Url;
            }
            set
            {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true)
                            && (this.useDefaultCredentialsSetExplicitly == false))
                            && (this.IsLocalFileSystemWebService(value) == false)))
                {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }

        public new bool UseDefaultCredentials
        {
            get
            {
                return base.UseDefaultCredentials;
            }
            set
            {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }

        /// <remarks/>
        public event ErrorReportCompletedEventHandler ErrorReportCompleted;

        /// <remarks/>
        public event ErrorReportV2CompletedEventHandler ErrorReportV2Completed;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://update.soap.avukatpro.com/ErrorReport", RequestNamespace = "http://update.soap.avukatpro.com/", ResponseNamespace = "http://update.soap.avukatpro.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ErrorReport(string from, string fromName, string noteFromSender, string errorDetail, string exeVersionNumber, string dbVersionNumber, byte errorSource)
        {
            object[] results = this.Invoke("ErrorReport", new object[] {
                        from,
                        fromName,
                        noteFromSender,
                        errorDetail,
                        exeVersionNumber,
                        dbVersionNumber,
                        errorSource});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void ErrorReportAsync(string from, string fromName, string noteFromSender, string errorDetail, string exeVersionNumber, string dbVersionNumber, byte errorSource)
        {
            this.ErrorReportAsync(from, fromName, noteFromSender, errorDetail, exeVersionNumber, dbVersionNumber, errorSource, null);
        }

        /// <remarks/>
        public void ErrorReportAsync(string from, string fromName, string noteFromSender, string errorDetail, string exeVersionNumber, string dbVersionNumber, byte errorSource, object userState)
        {
            if ((this.ErrorReportOperationCompleted == null))
            {
                this.ErrorReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnErrorReportOperationCompleted);
            }
            this.InvokeAsync("ErrorReport", new object[] {
                        from,
                        fromName,
                        noteFromSender,
                        errorDetail,
                        exeVersionNumber,
                        dbVersionNumber,
                        errorSource}, this.ErrorReportOperationCompleted, userState);
        }

        private void OnErrorReportOperationCompleted(object arg)
        {
            if ((this.ErrorReportCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ErrorReportCompleted(this, new ErrorReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://update.soap.avukatpro.com/ErrorReportV2", RequestNamespace = "http://update.soap.avukatpro.com/", ResponseNamespace = "http://update.soap.avukatpro.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ErrorReportV2(string prdKey, string senderName, string senderEmail, string summary, string description, string errorReport, string exeVersionNumber, byte errorSource, bool isAnonymous, string[] components)
        {
            object[] results = this.Invoke("ErrorReportV2", new object[] {
                        prdKey,
                        senderName,
                        senderEmail,
                        summary,
                        description,
                        errorReport,
                        exeVersionNumber,
                        errorSource,
                        isAnonymous,
                        components});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void ErrorReportV2Async(string prdKey, string senderName, string senderEmail, string summary, string description, string errorReport, string exeVersionNumber, byte errorSource, bool isAnonymous, string[] components)
        {
            this.ErrorReportV2Async(prdKey, senderName, senderEmail, summary, description, errorReport, exeVersionNumber, errorSource, isAnonymous, components, null);
        }

        /// <remarks/>
        public void ErrorReportV2Async(string prdKey, string senderName, string senderEmail, string summary, string description, string errorReport, string exeVersionNumber, byte errorSource, bool isAnonymous, string[] components, object userState)
        {
            if ((this.ErrorReportV2OperationCompleted == null))
            {
                this.ErrorReportV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnErrorReportV2OperationCompleted);
            }
            this.InvokeAsync("ErrorReportV2", new object[] {
                        prdKey,
                        senderName,
                        senderEmail,
                        summary,
                        description,
                        errorReport,
                        exeVersionNumber,
                        errorSource,
                        isAnonymous,
                        components}, this.ErrorReportV2OperationCompleted, userState);
        }

        private void OnErrorReportV2OperationCompleted(object arg)
        {
            if ((this.ErrorReportV2Completed != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ErrorReportV2Completed(this, new ErrorReportV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }

        private bool IsLocalFileSystemWebService(string url)
        {
            if (((url == null)
                        || (url == string.Empty)))
            {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024)
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0)))
            {
                return true;
            }
            return false;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ErrorReportCompletedEventHandler(object sender, ErrorReportCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ErrorReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        internal ErrorReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ErrorReportV2CompletedEventHandler(object sender, ErrorReportV2CompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ErrorReportV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        internal ErrorReportV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591